[tool.poetry]
name = "counting"
version = "0.10.0"
description = ""
authors = ["Keksi <contact@keksi.me>"]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = "^3.11"
disnake = {extras = ["speed"], version = "^2.8.1"}
redis = {extras = ["hiredis"], version = "^5.0.4"}
rich = "^13.3.5"
python-dotenv = "^1.0.0"
pyyaml = "^6.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.30"}
asyncpg = "^0.29.0"
arrow = "^1.2.3"
fakeredis = "^2.21.0"
sentry-sdk = "^2.1.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.2"
pre-commit = "^3.4.0"

[tool.ruff]
line-length = 120
target-version = "py312"
select = [
    "E",    # pycodestyle
    "W",    # pycodestyle
    "F",    # pyflakes
    "S",    # bandit
    "I",    # isort
    "ANN",  # flake8-annotations
    "B",    # flake8-bugbear
    "C",    # flake8-comprehensions
    "D",    # flake8-docstrings
    "Q",    # flake8-quotes
    "T201", "T203" # flake8-print
]
ignore = [
    # Missing Docstrings
    "D100","D101","D103","D104","D105","D106","D107",
    # Docstring Whitespace
    "D203","D212","D214","D215",
    # Docstring Content
    "D400","D402","D404","D405","D406","D407","D408","D409","D410","D411","D412","D413","D414","D416","D417",

    # ignore imperative mood for now
    "D401",
    # Type Annotations
    "ANN002","ANN003","ANN101","ANN102","ANN204","ANN206","ANN401",
]

[tool.ruff.isort]
known-first-party = ["counting"]
lines-after-imports = 2

[tool.poe.tasks]
start = "poetry run python -m counting"
lint = "pre-commit run --all-files"
precommit = "pre-commit install"
black = "^23.9.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
